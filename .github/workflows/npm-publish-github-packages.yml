# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Node.js Package

on: 
  workflow_dispatch:
  push: 
    
jobs:
  checkout_build_app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
     - uses: actions/checkout@v3
     - name: Use Node.js ${{ matrix.node-version }}
       uses: actions/setup-node@v3
       with:
         node-version: ${{ matrix.node-version }}
         cache: 'npm'
     - run: npm ci
     - run: npm test

  container_armsixtyfour_architecture_app_to_registry:
    name: Build and Deploy Docker image 
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      - name: login to docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: build the image
        run: |
          docker buildx build --push \
            --tag kvnkrruk/ha_automationhelper:latest \
            --platform linux/amd64,linux/arm64 .
  ssh_container_to_rpfour:
    name: update server
    needs: "container_armsixtyfour_architecture_app_to_registry"
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        command_timeout: 200m
        script: 
          echo "${{ secrets.PASSWORD }}" | sudo -S ./Update.sh
  
          # echo ${{ secrets.PASSWORD }} | sudo -S docker stop my-helper-app
          #echo ${{ secrets.PASSWORD }} | sudo -S docker rm   my-helper-app
          #echo ${{ secrets.PASSWORD }} | sudo -S docker rmi  kvnkrruk/ha_automationhelper
          #echo ${{ secrets.PASSWORD }} | sudo -S docker run -t -d -p 9002:9005 --name my-helper-app kvnkrruk/ha_automationhelper
